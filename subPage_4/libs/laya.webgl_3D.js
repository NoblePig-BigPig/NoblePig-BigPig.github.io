!function(e,t){"use strict";class a{static cullByCameraCullInfo(e,a,r,s,n,i){const o=e.boundFrustum,h=e.cullingMask,d=e.staticMask;let l,c;for(let u=0;u<r;u++)if(l=a[u],c=0!=(1<<l.layer&h)&&0==l.renderbitFlag,c=c&&0!=(l.staticMask&d),c&&(t.Stat.frustumCulling++,!e.useOcclusionCulling||l._needRender(o))){let a;l.distanceForSort=t.Vector3.distanceSquared(l.bounds._imp.getCenter(),e.position),l._renderUpdatePre(i);const r=l.renderelements;for(let e=0,t=r.length;e<t;e++)a=r[e],a.materialRenderQueue>2500?n.addRenderElement(a):s.addRenderElement(a)}}static cullDirectLightShadow(e,a,r,s,n){s.clear();for(let i=0;i<r;i++){const r=a[i];if(r.shadowCullPass()&&(t.Stat.frustumCulling++,t.FrustumCulling.cullingRenderBounds(r.bounds,e))){let a;r.distanceForSort=t.Vector3.distanceSquared(r.bounds._imp.getCenter(),e.position),r._renderUpdatePre(n);const i=r.renderelements;for(let e=0,t=i.length;e<t;e++)a=i[e],a.materialRenderQueue<2500&&s.addRenderElement(a)}}}static cullSpotShadow(e,a,r,s,n){s.clear();const i=e.boundFrustum;for(let o=0;o<r;o++){const r=a[o];if(r._renderUpdatePre(n),r.shadowCullPass()&&(t.Stat.frustumCulling++,r.distanceForSort=t.Vector3.distanceSquared(r.bounds._imp.getCenter(),e.position),r._needRender(i))){let e;const t=r.renderelements;for(let a=0,r=t.length;a<r;a++)e=t[a],e.materialRenderQueue<2500&&s.addRenderElement(e)}}}}class r{static renderCmd(e,t){e&&e.length>0&&e.forEach((e=>t.runCMDList(e._renderCMDs)))}static recoverRenderContext3D(e,a){e.setViewPort(this.contextViewPortCache),e.setScissor(this.contextScissorCache),e.setRenderTarget(a,t.RenderClearFlag.Nothing)}}r.contextViewPortCache=new t.Viewport,r.contextScissorCache=new t.Vector4;class s{sort(e,t,a,r){this.elementArray=e,this.isTransparent=t,this._quickSort(a,r)}_quickSort(e,t){if(this.elementArray.length>1){const a=this._partitionRenderObject(e,t),r=a-1;e<r&&this._quickSort(e,r),a<t&&this._quickSort(a,t)}}_partitionRenderObject(e,t){const a=this.elementArray.elements,r=a[Math.floor((t+e)/2)];for(;e<=t;){for(;this._compare(a[e],r)<0;)e++;for(;this._compare(a[t],r)>0;)t--;if(e<t){const r=a[e];a[e]=a[t],a[t]=r,e++,t--}else if(e===t){e++;break}}return e}_compare(e,t){const a=e.materialRenderQueue-t.materialRenderQueue;if(0===a){return(this.isTransparent?t.owner.distanceForSort-e.owner.distanceForSort:e.owner.distanceForSort-t.owner.distanceForSort)+t.owner.sortingFudge-e.owner.sortingFudge}return a}}class n{get elements(){return this._elements}constructor(e){this._elements=new t.FastSinglelist,this._isTransparent=e,this._quickSort=new s,this._batch=t.Laya3DRender.Render3DPassFactory.createInstanceBatch()}addRenderElement(e){e.materialShaderData&&this._elements.add(e)}_batchQueue(){this._isTransparent||this._batch.batch(this._elements)}renderQueue(e){this._batchQueue();const t=this._elements.length;this._quickSort.sort(this._elements,this._isTransparent,0,t-1),e.drawRenderElementList(this._elements),this._batch.clearRenderData()}clear(){this._elements.elements.fill(null),this._elements.length=0}destroy(){this.clear(),this._elements=null}}class i{_renderUpdatePre_StatUse(e){if(this._updateMark!=e.cameraUpdateMask){var a=performance.now();this._renderUpdatePreFun.call(this._renderUpdatePreCall,e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_RenderPreUpdate]+=performance.now()-a,this._updateMark=e.cameraUpdateMask}}_renderUpdatePre(e){this._updateMark!=e.cameraUpdateMask&&(this._renderUpdatePreFun.call(this._renderUpdatePreCall,e),this._updateMark=e.cameraUpdateMask)}_calculateBoundingBox(){this._caculateBoundingBoxFun.call(this._caculateBoundingBoxCall)}get bounds(){return this.boundsChange&&(this._calculateBoundingBox(),this.boundsChange=!1),this._bounds}set bounds(e){this._bounds=e}get additionShaderData(){return this._additionShaderData}set additionShaderData(e){this._additionShaderData=e,this._additionShaderDataKeys=e?Array.from(this._additionShaderData.keys()):[]}constructor(){this.renderelements=[],this._commonUniformMap=[],this._worldParams=new t.Vector4(1,0,0,0),this.lightmapDirtyFlag=-1,this.lightmapScaleOffset=new t.Vector4(1,1,0,0),this.set_caculateBoundingBox(this,this._ownerCalculateBoundingBox),this.additionShaderData=new Map}setNodeCustomData(e,t){switch(e){case 0:this._worldParams.y=t;break;case 1:this._worldParams.z=t;break;case 2:this._worldParams.w=t}}set_renderUpdatePreCall(e,t){this._renderUpdatePreCall=e,this._renderUpdatePreFun=t}set_caculateBoundingBox(e,t){this._caculateBoundingBoxCall=e,this._caculateBoundingBoxFun=t}_needRender(e){return!e||e.intersects(this.bounds)}setRenderelements(e){this.renderelements.length=0;for(var t=0;t<e.length;t++)this.renderelements.push(e[t]),e[t].owner=this}setOneMaterial(e,t){this.renderelements[e]&&(this.renderelements[e].materialShaderData=t.shaderData,this.renderelements[e].materialRenderQueue=t.renderQueue,this.renderelements[e].subShader=t.shader.getSubShaderAt(0),this.renderelements[e].materialId=t._id)}setLightmapScaleOffset(e){e&&e.cloneTo(this.lightmapScaleOffset)}setCommonUniformMap(e){this._commonUniformMap.length=0,e.forEach((e=>{this._commonUniformMap.push(e)}))}shadowCullPass(){return this.castShadow&&this.enable&&0==this.renderbitFlag}_ownerCalculateBoundingBox(){this.baseGeometryBounds._tranform(this.transform.worldMatrix,this._bounds)}_applyLightMapParams(){let e=this.shaderData;if(this.lightmap){let a=this.lightmap;e.setVector(t.RenderableSprite3D.LIGHTMAPSCALEOFFSET,this.lightmapScaleOffset),e._setInternalTexture(t.RenderableSprite3D.LIGHTMAP,a.lightmapColor),e.addDefine(t.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),a.lightmapDirection?(e._setInternalTexture(t.RenderableSprite3D.LIGHTMAP_DIRECTION,a.lightmapDirection),e.addDefine(t.RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)):e.removeDefine(t.RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}else e.removeDefine(t.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP),e.removeDefine(t.RenderableSprite3D.SHADERDEFINE_LIGHTMAP_DIRECTIONAL)}_applyLightProb(){this.lightmapIndex>=0||!this.volumetricGI||this.volumetricGI.updateMark!=this.lightProbUpdateMark&&(this.lightProbUpdateMark=this.volumetricGI.updateMark,this.volumetricGI.applyRenderData())}_applyReflection(){this.probeReflection&&this.reflectionMode!=t.ReflectionProbeMode.off&&this.probeReflection.needUpdate()&&this.probeReflection.applyRenderData()}destroy(){this.renderelements.forEach((e=>{e.destroy()})),this.baseGeometryBounds=null,this.transform=null,this.lightmapScaleOffset=null,this.lightmap=null,this.probeReflection=null,this.volumetricGI=null,this.renderelements.length=0,this.renderelements=null,this._commonUniformMap.length=0,this._commonUniformMap=null,this.shaderData&&this.shaderData.destroy(),this.additionShaderData.clear(),this.additionShaderData=null,this._additionShaderDataKeys.length=0,this._additionShaderDataKeys=null}}class o{constructor(){this._shadowFourCascadeSplits=new t.Vector3,this._direction=new t.Vector3}setShadowFourCascadeSplits(e){e&&e.cloneTo(this._shadowFourCascadeSplits)}setDirection(e){e&&e.cloneTo(this._direction)}}class h{destroy(){this.lightmapColor=null,this.lightmapDirection=null}}class d extends i{constructor(){super(),this.set_renderUpdatePreCall(this,this._renderUpdate)}_renderUpdate(e){e.sceneModuleData.lightmapDirtyFlag!=this.lightmapDirtyFlag&&(this._applyLightMapParams(),this.lightmapDirtyFlag=e.sceneModuleData.lightmapDirtyFlag),this._applyReflection(),this._applyLightProb();let a=this.transform;this.shaderData.setMatrix4x4(t.Sprite3D.WORLDMATRIX,a.worldMatrix),this._worldParams.x=a.getFrontFaceValue(),this.shaderData.setVector(t.Sprite3D.WORLDINVERTFRONT,this._worldParams)}}class l{constructor(){this._projectViewMatrix=new t.Matrix4x4}setProjectionViewMatrix(e){e&&e.cloneTo(this._projectViewMatrix)}}class c{}class u{}class _{constructor(){this._id=++_._idCounter,this._updateMaskFlag=-1,this._shCoefficients=[],this._probePosition=new t.Vector3,this._ambientColor=new t.Color,this.shaderData=t.LayaGL.renderDeviceFactory.createShaderData()}needUpdate(){return this.updateMark!=this._updateMaskFlag}destroy(){this.bound=null,delete this._shCoefficients,delete this._ambientSH,this.shaderData.destroy(),this.shaderData=null}setAmbientSH(e){this._ambientSH=e}setShCoefficients(e){this._shCoefficients.length=0,e.forEach((e=>{var a=new t.Vector4;e.cloneTo(a),this._shCoefficients.push(a)}))}setProbePosition(e){e&&e.cloneTo(this._probePosition)}setreflectionHDRParams(e){e&&e.cloneTo(this._reflectionHDRParams)}setAmbientColor(e){e&&e.cloneTo(this._ambientColor)}applyRenderData(){this._updateMaskFlag=this.updateMark;let e=this.shaderData;this.boxProjection?(e.addDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),e.setVector3(t.ReflectionProbe.REFLECTIONCUBE_PROBEPOSITION,this._probePosition),e.setVector3(t.ReflectionProbe.REFLECTIONCUBE_PROBEBOXMAX,this.bound.getMax()),e.setVector3(t.ReflectionProbe.REFLECTIONCUBE_PROBEBOXMIN,this.bound.getMin())):e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_SPECCUBE_BOX_PROJECTION),this.ambientMode==t.AmbientMode.SolidColor?(e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),e.removeDefine(t.ReflectionProbe.SHADERDEFINE_GI_IBL),e.setColor(t.ReflectionProbe.AMBIENTCOLOR,this._ambientColor)):this.iblTex&&this._ambientSH?(e.addDefine(t.ReflectionProbe.SHADERDEFINE_GI_IBL),e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),this.iblTex&&(e._setInternalTexture(t.ReflectionProbe.IBLTEX,this.iblTex),e.setNumber(t.ReflectionProbe.IBLROUGHNESSLEVEL,this.iblTex.maxMipmapLevel)),this.iblTexRGBD?e.addDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD):e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_IBL_RGBD),this._ambientSH&&e.setBuffer(t.ReflectionProbe.AMBIENTSH,this._ambientSH)):(e.removeDefine(t.Sprite3DRenderDeclaration.SHADERDEFINE_GI_LEGACYIBL),e.removeDefine(t.ReflectionProbe.SHADERDEFINE_GI_IBL)),e.setNumber(t.ReflectionProbe.AMBIENTINTENSITY,this.ambientIntensity),e.setNumber(t.ReflectionProbe.REFLECTIONINTENSITY,this.reflectionIntensity)}}_._idCounter=0;class p extends i{constructor(){super(),this.set_renderUpdatePreCall(this,this._renderUpdate),this._simpleAnimatorParams=new t.Vector4}setSimpleAnimatorParams(e){e.cloneTo(this._simpleAnimatorParams),this.shaderData.setVector(t.SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS,this._simpleAnimatorParams)}_renderUpdate(e){let a=this.shaderData,r=this.transform.worldMatrix,s=this._worldParams;s.x=this.transform.getFrontFaceValue(),a.setMatrix4x4(t.Sprite3D.WORLDMATRIX,r),a.setVector(t.Sprite3D.WORLDINVERTFRONT,s),this._applyLightProb(),this._applyReflection(),a.setVector(t.SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS,this._simpleAnimatorParams)}}class S extends i{constructor(){super(),this._bones=[],this.set_renderUpdatePreCall(this,this._renderUpdate)}setRootBoneTransfom(e){this._cacheRootBone=e.transform}setOwnerTransform(e){this._owner=e.transform}setCacheMesh(e){this._cacheMesh=e,this._skinnedDataLoopMarks=new Uint32Array(e._inverseBindPoses.length)}setBones(e){this._bones=e}setSkinnedData(e){this._skinnedData=e}computeSkinnedData(){for(var e=this._cacheMesh._inverseBindPoses,t=this._cacheMesh._skinnedMatrixCaches,a=0,r=this._cacheMesh.subMeshCount;a<r;a++)for(var s=this._cacheMesh.getSubMesh(a)._boneIndicesList,n=this._skinnedData[a],i=0,o=s.length;i<o;i++){var h=s[i];this._computeSubSkinnedData(e,h,n[i],t)}}_computeSubSkinnedData(e,a,r,s){for(let n=0,i=a.length;n<i;n++){let i=a[n];if(this._skinnedDataLoopMarks[i]===t.Stat.loopCount){let e=s[i],t=this._skinnedData[e.subMeshIndex][e.batchIndex],a=16*e.batchBoneIndex,o=16*n;for(let e=0;e<16;e++)r[o+e]=t[a+e]}else{let a=this._bones[i];a&&t.Utils3D._mulMatrixArray(a.transform.worldMatrix.elements,e[i].elements,0,r,16*n),this._skinnedDataLoopMarks[i]=t.Stat.loopCount}}}_renderUpdate(e){let a=this._owner.worldMatrix,r=this._worldParams;r.x=this._owner.getFrontFaceValue(),this._cacheRootBone&&(a=t.Matrix4x4.DEFAULT,r.x=1),this._applyLightProb(),this._applyReflection(),this.shaderData.setMatrix4x4(t.Sprite3D.WORLDMATRIX,a),this.shaderData.setVector(t.Sprite3D.WORLDINVERTFRONT,r)}}class D{setDirection(e){e.cloneTo(this._direction)}getWorldMatrix(e){var a=this.transform.position,r=this.transform.rotation;return t.Matrix4x4.createAffineTransformation(a,r,t.Vector3.ONE,e),e}}class m{constructor(){this._id=++m._idCounter,this._probeCounts=new t.Vector3,this._probeStep=new t.Vector3,this._params=new t.Vector4,this._params=new t.Vector4,this.bound=new t.Bounds,this.shaderData=t.LayaGL.renderDeviceFactory.createShaderData()}setParams(e){e.cloneTo(this._params)}setProbeCounts(e){e.cloneTo(this._probeCounts)}setProbeStep(e){e.cloneTo(this._probeStep)}applyRenderData(){let e=this.shaderData;e.addDefine(t.VolumetricGI.SHADERDEFINE_VOLUMETRICGI),e.setVector3(t.VolumetricGI.VOLUMETRICGI_PROBECOUNTS,this._probeCounts),e.setVector3(t.VolumetricGI.VOLUMETRICGI_PROBESTEPS,this._probeStep),e.setVector3(t.VolumetricGI.VOLUMETRICGI_PROBESTARTPOS,this.bound.getMin()),e.setVector(t.VolumetricGI.VOLUMETRICGI_PROBEPARAMS,this._params),e._setInternalTexture(t.VolumetricGI.VOLUMETRICGI_IRRADIANCE,this.irradiance),e._setInternalTexture(t.VolumetricGI.VOLUMETRICGI_DISTANCE,this.distance),e.setNumber(t.ReflectionProbe.AMBIENTINTENSITY,this.intensity)}destroy(){this.shaderData.destroy(),this.shaderData=null,this.irradiance=null,this.distance=null,this.bound=null}}m._idCounter=0;class f{createSimpleSkinRenderNode(){return new p}createTransform(e){return new t.Transform3D(e)}createBounds(e,a){return new t.BoundsImpl(e,a)}createVolumetricGI(){return new m}createReflectionProbe(){return new _}createLightmapData(){return new h}createDirectLight(){return new o}createSpotLight(){return new D}createPointLight(){return new u}createCameraModuleData(){return new l}createSceneModuleData(){return new c}createBaseRenderNode(){let e=new i;return t.Stat.enableRenderPassStatArray&&(e._renderUpdatePre=e._renderUpdatePre_StatUse),e}createMeshRenderNode(){return new d}createSkinRenderNode(){return new S}}t.Laya.addBeforeInitCallback((()=>{t.Laya3DRender.Render3DModuleDataFactory||(t.Laya3DRender.Render3DModuleDataFactory=new f)}));class w{constructor(){this._shaderInstances=new t.FastSinglelist}_addShaderInstance(e){this._shaderInstances.add(e)}_clearShaderInstance(){this._shaderInstances.length=0}_preUpdatePre(e){if(this._compileShader(e),this.materialShaderData&&t.Config.matUseUBO){let e=this.subShader,t=this.materialShaderData.createSubUniformBuffer("Material",e._owner.name,e._uniformMap);t&&t.needUpload&&t.bufferBlock.needUpload()}if(this.owner&&t.Config._uniformBlock)for(let[e,a]of this.owner.additionShaderData){let r=a,s=t.LayaGL.renderDeviceFactory.createGlobalUniformMap(e),n=r.createSubUniformBuffer(e,e,s._idata);n&&n.needUpload&&n.bufferBlock.needUpload()}this._invertFront=this._getInvertFront()}_getInvertFront(){var e;let t=null===(e=this.owner)||void 0===e?void 0:e.transform;return!!t&&t._isFrontFaceInvert}_render(e){let t=e.invertY,a=e.cameraUpdateMask,r=e.sceneData,s=e.cameraData;if(this.isRender){let e=this._shaderInstances.elements;for(let n=0,i=this._shaderInstances.length;n<i;n++){const i=e[n];if(!i.complete)continue;let o=i.bind(),h=a!==i._uploadMark,d=i._uploadScene!==r||h;if((d||o)&&(r&&i.uploadUniforms(i._sceneUniformParamsMap,r,d),i._uploadScene=r),this.renderShaderData){let e=i._uploadRender!==this.renderShaderData||h;(e||o)&&(i.uploadUniforms(i._spriteUniformParamsMap,this.renderShaderData,e),i._uploadRender=this.renderShaderData)}if(this.owner){let e=this.owner.additionShaderData;for(let[t,a]of i._additionUniformParamsMaps){let r=e.get(t);if(r){let e=i._additionShaderData.get(t)!==r||h;(e||o)&&(i.uploadUniforms(a,r,e),i._additionShaderData.set(t,r))}}}let l=i._uploadCameraShaderValue!==s||h;(l||o)&&(s&&i.uploadUniforms(i._cameraUniformParamsMap,s,l),i._uploadCameraShaderValue=s);let c=i._uploadMaterial!==this.materialShaderData||h;(c||o)&&(i.uploadUniforms(i._materialUniformParamsMap,this.materialShaderData,c),i._uploadMaterial=this.materialShaderData),i.uploadRenderStateBlendDepth(this.materialShaderData),i.uploadRenderStateFrontFace(this.materialShaderData,t,this._invertFront),this.drawGeometry(i)}}}_getShaderInstanceDefines(e){let t=w._compileDefine;if(e._getContextShaderDefines().cloneTo(t),this.renderShaderData&&t.addDefineDatas(this.renderShaderData.getDefineData()),this.materialShaderData&&t.addDefineDatas(this.materialShaderData._defineDatas),this.owner){let e=this.owner.additionShaderData;if(e.size>0)for(let[a,r]of e.entries())t.addDefineDatas(r.getDefineData())}return t}_compileShader(e){this._clearShaderInstance();let t=this._getShaderInstanceDefines(e);for(var a=this.subShader._passes,r=0,s=a.length;r<s;r++){let s=a[r],i=s.moduleData;if(i.pipelineMode===e.pipelineMode){this.renderShaderData?i.nodeCommonMap=this.owner._commonUniformMap:i.nodeCommonMap=null,i.additionShaderData=null,this.owner&&(i.additionShaderData=this.owner._additionShaderDataKeys);var n=s.withCompile(t);this._addShaderInstance(n)}}}drawGeometry(e){t.WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry)}destroy(){this.geometry=null,this._shaderInstances=null,this.materialShaderData=null,this.renderShaderData=null,this.transform=null,this.isRender=null}}w._compileDefine=new t.WebDefineDatas;class g{constructor(){this._batchOpaqueMarks=[],this._updateCountMark=0,this.recoverList=new t.FastSinglelist}getBatchMark(e){const a=e.owner,r=e.geometry,s=!!e.transform&&e.transform._isFrontFaceInvert?1:0,n=a.receiveShadow?1:0,i=r._id,o=(e.materialId<<17)+(i<<2)+(s<<1)+n,h=((a.probeReflection?a.probeReflection._id:-1)+1<<10)+(a.lightmapIndex+1<<20)+((a.volumetricGI?a.volumetricGI._id:-1)+1),d=this._batchOpaqueMarks[o]||(this._batchOpaqueMarks[o]={});return d[h]||(d[h]=new t.BatchMark)}batch(e){if(!t.Config3D.enableDynamicBatch||!t.LayaGL.renderEngine.getCapable(t.RenderCapable.DrawElement_Instance))return;const a=e.length,r=e.elements,s=g.MaxInstanceCount;e.length=0,this._updateCountMark++;for(let n=0;n<a;n++){const a=r[n];if(a.canDynamicBatch&&a.subShader._owner._enableInstancing){const n=this.getBatchMark(a);if(this._updateCountMark==n.updateMark){const i=n.indexInList;if(n.batched){const t=r[i].instanceElementList;t.length===s?(n.indexInList=e.length,n.batched=!1,e.add(a)):t.add(a)}else{const e=r[i],s=t.Laya3DRender.Render3DPassFactory.createInstanceRenderElement3D();this.recoverList.add(s),s.subShader=a.subShader,s.materialShaderData=a.materialShaderData,s.materialRenderQueue=a.materialRenderQueue,s.renderShaderData=a.renderShaderData,s.owner=a.owner,s.setGeometry(a.geometry);const o=s.instanceElementList;o.length=0,o.add(e),o.add(a),r[i]=s,n.batched=!0}}else n.updateMark=this._updateCountMark,n.indexInList=e.length,n.batched=!1,e.add(a)}else e.add(a)}}clearRenderData(){for(let e=this.recoverList.length-1;e>-1;e--){this.recoverList.elements[e].clearRenderData()}}recoverData(){for(let e=this.recoverList.length-1;e>-1;e--){this.recoverList.elements[e].recover()}this.recoverList.length=0}}g.MaxInstanceCount=1024;class C extends w{static getInstanceBufferState(e,a,r){let s=C._instanceBufferStateMap.get(e._id);if(!s){s={state:new t.WebGLBufferState};let n=e.bufferState._vertexBuffers.slice(),i=new t.WebGLVertexBuffer(t.BufferTargetType.ARRAY_BUFFER,t.BufferUsage.Dynamic);switch(i.setDataLength(20*C.MaxInstanceCount*4),i.vertexDeclaration=t.VertexMesh.instanceWorldMatrixDeclaration,i.instanceBuffer=!0,n.push(i),s.worldInstanceVB=i,a){case t.BaseRenderType.MeshRender:if(r.has(t.MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1)){let e=new t.WebGLVertexBuffer(t.BufferTargetType.ARRAY_BUFFER,t.BufferUsage.Dynamic);e.setDataLength(4*C.MaxInstanceCount*4),e.vertexDeclaration=t.VertexMesh.instanceLightMapScaleOffsetDeclaration,e.instanceBuffer=!0,n.push(e),s.lightmapScaleOffsetVB=e}break;case t.BaseRenderType.SimpleSkinRender:let e=new t.WebGLVertexBuffer(t.BufferTargetType.ARRAY_BUFFER,t.BufferUsage.Dynamic);e.setDataLength(4*C.MaxInstanceCount*4),e.vertexDeclaration=t.VertexMesh.instanceSimpleAnimatorDeclaration,e.instanceBuffer=!0,n.push(e),s.simpleAnimatorVB=e}s.state.applyState(n,e.bufferState._bindedIndexBuffer),C._instanceBufferStateMap.set(e._id,s)}return s}static create(){return this._pool.pop()||new C}static _instanceBufferCreate(e){let t=C._bufferPool.get(e);return t||(C._bufferPool.set(e,[]),t=C._bufferPool.get(e)),t.pop()||new Float32Array(e)}constructor(){super(),this._vertexBuffers=[],this._updateData=[],this._updateDataNum=[],this.instanceElementList=new t.FastSinglelist,this.drawCount=0,this.updateNums=0,this.isRender=!0}addUpdateData(e,t,a){this._vertexBuffers[this.updateNums]=e,this._updateDataNum[this.updateNums]=t;let r=this._updateData[this.updateNums]=C._instanceBufferCreate(t*a);return this.updateNums++,r}_compileShader(e){this._clearShaderInstance();let a=this._getShaderInstanceDefines(e);a.add(t.MeshSprite3DShaderDeclaration.SHADERDEFINE_GPU_INSTANCE);let r=this.subShader._passes;for(let t=0;t<r.length;t++){let s=r[t];if(s.pipelineMode!=e.pipelineMode)continue;this.renderShaderData?s.nodeCommonMap=this.owner._commonUniformMap:s.nodeCommonMap=null,s.additionShaderData=null,this.owner&&(s.additionShaderData=this.owner._additionShaderDataKeys);let n=s.withCompile(a);this._addShaderInstance(n)}this._shaderInstances.length>0&&this._updateInstanceData()}_updateInstanceData(){switch(this.owner.renderNodeType){case t.BaseRenderType.MeshRender:{let i=this.addUpdateData(this._instanceStateInfo.worldInstanceVB,20,C.MaxInstanceCount);var e=(s=this.instanceElementList).elements,a=s.length;this.drawCount=a,this.geometry.instanceCount=this.drawCount;for(var r=0;r<a;r++)i.set(e[r].transform.worldMatrix.elements,20*r),e[r].owner._worldParams.writeTo(i,20*r+16);if(this.renderShaderData.hasDefine(t.RenderableSprite3D.SAHDERDEFINE_LIGHTMAP)&&this.renderShaderData.hasDefine(t.MeshSprite3DShaderDeclaration.SHADERDEFINE_UV1)){let t=this.addUpdateData(this._instanceStateInfo.lightmapScaleOffsetVB,4,C.MaxInstanceCount);for(r=0;r<a;r++){let a=e[r].owner.lightmapScaleOffset;t[n=4*r]=a.x,t[n+1]=a.y,t[n+2]=a.z,t[n+3]=a.w}}break}case t.BaseRenderType.SimpleSkinRender:{let o=this.addUpdateData(this._instanceStateInfo.worldInstanceVB,20,C.MaxInstanceCount);var s;e=(s=this.instanceElementList).elements,a=s.length;this.drawCount=a,this.geometry.instanceCount=this.drawCount;for(r=0;r<a;r++)o.set(e[r].transform.worldMatrix.elements,20*r),e[r].owner._worldParams.writeTo(o,20*r+16);let h=this.addUpdateData(this._instanceStateInfo.simpleAnimatorVB,4,C.MaxInstanceCount);for(r=0;r<a;r++){var n,i=e[r].renderShaderData.getVector(t.SimpleSkinnedMeshSprite3D.SIMPLE_SIMPLEANIMATORPARAMS);h[n=4*r]=i.x,h[n+1]=i.y,h[n+2]=i.z,h[n+3]=i.w}break}}}setGeometry(e){this.geometry||(this.geometry=new t.WebGLRenderGeometryElement(e.mode,e.drawType)),e.cloneTo(this.geometry),this.geometry.drawType=t.DrawType.DrawElementInstance,this._instanceStateInfo=C.getInstanceBufferState(e,this.owner.renderNodeType,this.renderShaderData._defineDatas),this.geometry.bufferState=this._instanceStateInfo.state}_render(e){for(let e=0;e<this.updateNums;e++){let t=this._vertexBuffers[e];if(!t)break;let a=this._updateData[e];t.orphanStorage(),t.setData(a.buffer,0,0,this.drawCount*this._updateDataNum[e]*4)}super._render(e),this.clearRenderData()}clearRenderData(){this.drawCount=0,this.updateNums=0,this._vertexBuffers.length=0,this._updateData.forEach((e=>{C._bufferPool.get(e.length).push(e)})),this._updateData.length=0,this._updateDataNum.length=0}recover(){C._pool.push(this),this.instanceElementList.clear()}destroy(){super.destroy()}}C._instanceBufferStateMap=new Map,C.MaxInstanceCount=1024,C._pool=[],C._bufferPool=new Map;class M{get shadowCasterCommanBuffer(){return this._shadowCasterCommanBuffer}set shadowCasterCommanBuffer(e){this._shadowCasterCommanBuffer=e}set light(e){this._light=e;var a=t.Matrix4x4.TEMP,r=a.elements,s=this._lightup,n=this._lightSide,i=this._lightForward;t.Matrix4x4.createFromQuaternion(this._light.transform.rotation,a),n.setValue(r[0],r[1],r[2]),s.setValue(r[4],r[5],r[6]),i.setValue(-r[8],-r[9],-r[10]);var o=this._light.shadowResolution,h=this.shadowCastMode=this._light.shadowCascadesMode;if(h==t.ShadowCascadesMode.NoCascades)this._cascadeCount=1,this._shadowTileResolution=o,this._shadowMapWidth=o,this._shadowMapHeight=o;else{this._cascadeCount=h==t.ShadowCascadesMode.TwoCascades?2:4;let e=t.ShadowUtils.getMaxTileResolutionInAtlas(o,o,this._cascadeCount);this._shadowTileResolution=e,this._shadowMapWidth=2*e,this._shadowMapHeight=h==t.ShadowCascadesMode.TwoCascades?e:2*e}}get light(){return this._light}constructor(){this._cascadesSplitDistance=new Array(M._maxCascades+1),this._shadowMatrices=new Float32Array(16*M._maxCascades),this._splitBoundSpheres=new Float32Array(4*M._maxCascades),this._shadowSliceDatas=[new t.ShadowSliceData,new t.ShadowSliceData,new t.ShadowSliceData,new t.ShadowSliceData],this._shadowMapSize=new t.Vector4,this._shadowBias=new t.Vector4,this._cascadeCount=0,this._shadowMapWidth=0,this._shadowMapHeight=0,this._shadowTileResolution=0,this._lightup=new t.Vector3,this._lightSide=new t.Vector3,this._lightForward=new t.Vector3,this._cascadesSplitDistance=new Array(M._maxCascades+1),this._renderQueue=new n(!1),this._frustumPlanes=new Array(new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0),new t.Plane(new t.Vector3,0)),this._shadowCullInfo=new t.ShadowCullInfo}update(e){var a=this._cascadesSplitDistance,r=this._frustumPlanes,s=this.camera.nearplane,n=Math.min(this.camera.farplane,this._light.shadowDistance),i=this._shadowMatrices,o=this._splitBoundSpheres;t.ShadowUtils.getCascadesSplitDistance(this._light.shadowTwoCascadeSplits,this._light._shadowFourCascadeSplits,s,n,this.camera.fieldOfView*t.MathUtils3D.Deg2Rad,this.camera.aspectRatio,this.shadowCastMode,a),t.ShadowUtils.getCameraFrustumPlanes(this.camera._projectViewMatrix,r);var h=t.Vector3.TEMP;this.camera.transform.getForward(h),t.Vector3.normalize(h,h);for(var d=0;d<this._cascadeCount;d++){var l=this._shadowSliceDatas[d];l.sphereCenterZ=t.ShadowUtils.getBoundSphereByFrustum(a[d],a[d+1],this.camera.fieldOfView*t.MathUtils3D.Deg2Rad,this.camera.aspectRatio,this.camera.transform.position,h,l.splitBoundSphere),t.ShadowUtils.getDirectionLightShadowCullPlanes(r,d,a,s,this._lightForward,l),t.ShadowUtils.getDirectionalLightMatrices(this._lightup,this._lightSide,this._lightForward,d,this._light.shadowNearPlane,this._shadowTileResolution,l,i),this._cascadeCount>1&&t.ShadowUtils.applySliceTransform(l,this._shadowMapWidth,this._shadowMapHeight,d,i)}t.ShadowUtils.prepareShadowReceiverShaderValues(this._shadowMapWidth,this._shadowMapHeight,this._shadowSliceDatas,this._cascadeCount,this._shadowMapSize,i,o)}render(e,r,s){let n=e.sceneData;e.pipelineMode="ShadowCaster";var i=this.destTarget;e.setRenderTarget(i,t.RenderClearFlag.Depth),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0);let o=e.cameraData;for(var h=0,d=this._cascadeCount;h<d;h++){var l=this._shadowSliceDatas[h];this.getShadowBias(l.projectionMatrix,l.resolution,this._shadowBias),this._setupShadowCasterShaderValues(n,l,this._lightForward,this._shadowBias);var c=this._shadowCullInfo;c.position=l.position,c.cullPlanes=l.cullPlanes,c.cullPlaneCount=l.cullPlaneCount,c.cullSphere=l.splitBoundSphere,c.direction=this._lightForward;var u=performance.now();a.cullDirectLightShadow(c,r,s,this._renderQueue,e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_ShadowMapCull]+=performance.now()-u,e.cameraData=l.cameraShaderValue,e.cameraUpdateMask++;var _=l.resolution,p=l.offsetX,S=l.offsetY;this._renderQueue.elements.length>0?(t.Viewport.TEMP.set(p,S,_,_),t.Vector4.TEMP.setValue(p+1,S+1,_-2,_-2),e.setViewPort(t.Viewport.TEMP),e.setScissor(t.Vector4.TEMP)):(t.Viewport.TEMP.set(p,S,_,_),e.setViewPort(t.Viewport.TEMP),t.Vector4.TEMP.setValue(p,S,_,_),e.setScissor(t.Vector4.TEMP)),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this._renderQueue.renderQueue(e),t.Stat.shadowMapDrawCall+=this._renderQueue.elements.length,this._applyCasterPassCommandBuffer(e)}this._applyRenderData(e.sceneData,e.cameraData),this._renderQueue._batch.recoverData(),e.cameraData=o,e.cameraUpdateMask++}_applyRenderData(e,a){var r=this._light;switch(r.shadowCascadesMode!==t.ShadowCascadesMode.NoCascades?e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE):e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_CASCADE),r.shadowMode){case t.ShadowMode.Hard:e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case t.ShadowMode.SoftLow:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH);break;case t.ShadowMode.SoftHigh:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_HIGH),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SOFT_SHADOW_LOW)}e.setBuffer(t.ShadowCasterPass.SHADOW_MATRICES,this._shadowMatrices),e.setVector(t.ShadowCasterPass.SHADOW_MAP_SIZE,this._shadowMapSize),e.setBuffer(t.ShadowCasterPass.SHADOW_SPLIT_SPHERES,this._splitBoundSpheres)}_applyCasterPassCommandBuffer(e){this.shadowCasterCommanBuffer&&0!=this.shadowCasterCommanBuffer.length&&this.shadowCasterCommanBuffer.forEach((function(e){e._apply()}))}getShadowBias(e,a,r){var s=2/e.elements[0]/a,n=-this._light.shadowDepthBias*s,i=-this._light.shadowNormalBias*s;if(this._light.shadowMode==t.ShadowMode.SoftHigh){const e=2.5;n*=e,i*=e}r.setValue(n,i,0,0)}_setupShadowCasterShaderValues(e,a,r,s){e.setVector(t.ShadowCasterPass.SHADOW_BIAS,s),e.setVector3(t.ShadowCasterPass.SHADOW_LIGHT_DIRECTION,r);var n=a.cameraShaderValue;n.setMatrix4x4(t.BaseCamera.VIEWMATRIX,a.viewMatrix),n.setMatrix4x4(t.BaseCamera.PROJECTMATRIX,a.projectionMatrix),n.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix),e.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix)}destroy(){for(var e=0;e<this._shadowSliceDatas.length;e++)this._shadowSliceDatas[e].destroy();this._renderQueue.destroy(),this._cascadesSplitDistance=null,this._frustumPlanes=null,this._shadowMatrices=null,this._splitBoundSpheres=null}}M._maxCascades=4;class P{get sceneData(){return this._sceneData}set sceneData(e){if(this._sceneData=e,this.sceneData){let e=t.LayaGL.renderDeviceFactory.createGlobalUniformMap("Scene3D");this.sceneData.createUniformBuffer("Scene3D",e._idata)}}get cameraData(){return this._cameraData}set cameraData(e){if(this._cameraData=e,this.cameraData){let e=t.LayaGL.renderDeviceFactory.createGlobalUniformMap("BaseCamera");this.cameraData.createUniformBuffer("BaseCamera",e._idata)}}get sceneModuleData(){return this._sceneModuleData}set sceneModuleData(e){this._sceneModuleData=e}get cameraModuleData(){return this._cameraModuleData}set cameraModuleData(e){this._cameraModuleData=e}get globalShaderData(){return this._globalShaderData}set globalShaderData(e){this._globalShaderData=e}_getContextShaderDefines(){return this._cacheGlobalDefines}_prepareContext(){let e=this._cacheGlobalDefines;if(this.sceneData){this.sceneData._defineDatas.cloneTo(e);for(let e of this._preDrawUniformMaps)this.sceneData.updateUBOBuffer(e)}else this._globalConfigShaderData.cloneTo(e);this.cameraData&&(e.addDefineDatas(this.cameraData._defineDatas),this.cameraData.updateUBOBuffer("BaseCamera"))}setRenderTarget(e,t){this._clearFlag=t,e!=this._renderTarget&&(this._renderTarget=e,this._needStart=!0)}setViewPort(e){this._viewPort=e,this._needStart=!0}setScissor(e){this._scissor=e,this._needStart=!0}get sceneUpdataMask(){return this._sceneUpdataMask}set sceneUpdataMask(e){this._sceneUpdataMask=e}get cameraUpdateMask(){return this._cameraUpdateMask}set cameraUpdateMask(e){this._cameraUpdateMask=e}get pipelineMode(){return this._pipelineMode}set pipelineMode(e){this._pipelineMode=e}get invertY(){return this._invertY}set invertY(e){this._invertY=e}constructor(){this._cacheGlobalDefines=new t.WebDefineDatas,this._needStart=!0,this._clearColor=new t.Color,this._globalConfigShaderData=t.Shader3D._configDefineValues,this._preDrawUniformMaps=new Set,this.cameraUpdateMask=0,P._instance=this}runOneCMD(e){e.apply(this)}runCMDList(e){e.forEach((e=>{e.apply(this)}))}setClearData(e,t,a,r){return this._clearFlag=e,t.cloneTo(this._clearColor),this._clearDepth=a,this._clearStencil=r,0}drawRenderElementList(e){this._needStart&&(this._bindRenderTarget(),this._start(),this._needStart=!1),this._prepareContext();let a=e.elements;for(var r=0,s=e.length;r<s;r++)a[r]._preUpdatePre(this);let n=t.WebGLEngine.instance.bufferMgr;n&&n.upload();for(r=0,s=e.length;r<s;r++)a[r]._render(this);return 0}drawRenderElementOne(e){this._needStart&&(this._bindRenderTarget(),this._start(),this._needStart=!1),this._prepareContext(),e._preUpdatePre(this);let a=t.WebGLEngine.instance.bufferMgr;return a&&a.upload(),e._render(this),0}drawRenderElementList_StatUse(e){this._needStart&&(this._bindRenderTarget(),this._start(),this._needStart=!1);let a=e.elements;for(var r=0,s=e.length;r<s;r++)a[r]._preUpdatePre(this);let n=t.WebGLEngine.instance.bufferMgr;n&&n.upload();for(r=0,s=e.length;r<s;r++){var i=performance.now();if(a[r]._render(this),a[r].owner)switch(a[r].owner.renderNodeType){case 0:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OtherRender]+=performance.now()-i;break;case 1:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OnlyMeshRender]+=performance.now()-i;break;case 2:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OnlyShurikenParticleRender]+=performance.now()-i;break;case 9:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OnlySkinnedMeshRender]+=performance.now()-i}}return 0}drawRenderElementOne_StatUse(e){this._needStart&&(this._bindRenderTarget(),this._start(),this._needStart=!1),e._preUpdatePre(this);let a=t.WebGLEngine.instance.bufferMgr;a&&a.upload();var r=performance.now();if(e._render(this),e.owner)switch(e.owner.renderNodeType){case 0:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OtherRender]+=performance.now()-r;break;case 1:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OnlyMeshRender]+=performance.now()-r;break;case 2:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OnlyShurikenParticleRender]+=performance.now()-r;break;case 9:t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_OnlySkinnedMeshRender]+=performance.now()-r}return 0}_bindRenderTarget(){this._renderTarget?t.LayaGL.textureContext.bindRenderTarget(this._renderTarget):t.LayaGL.textureContext.bindoutScreenTarget()}_start(){t.WebGLEngine.instance.scissorTest(!0),t.WebGLEngine.instance.viewport(this._viewPort.x,this._viewPort.y,this._viewPort.width,this._viewPort.height),t.WebGLEngine.instance.scissor(this._viewPort.x,this._viewPort.y,this._viewPort.width,this._viewPort.height),this._clearFlag!=t.RenderClearFlag.Nothing&&t.WebGLEngine.instance.clearRenderTexture(this._clearFlag,this._clearColor,this._clearDepth,this._clearStencil),t.WebGLEngine.instance.scissor(this._scissor.x,this._scissor.y,this._scissor.z,this._scissor.w)}}class R{get enableOpaqueTexture(){return this._enableOpaqueTexture}set enableOpaqueTexture(e){this._enableOpaqueTexture=e}setViewPort(e){e.cloneTo(this._viewPort)}setScissor(e){e.cloneTo(this._scissor)}constructor(){this.blitOpaqueBuffer=new t.CommandBuffer,this.opaqueList=new n(!1),this.transparent=new n(!0),this.cameraCullInfo=new t.CameraCullInfo,this._zBufferParams=new t.Vector4,this._scissor=new t.Vector4,this._viewPort=new t.Viewport,this._defaultNormalDepthColor=new t.Color(.5,.5,1,0),this.clearColor=new t.Color,this.depthPipelineMode="ShadowCaster",this.depthNormalPipelineMode="DepthNormal";let e=P._instance;e._preDrawUniformMaps.add("Scene3D"),e._preDrawUniformMaps.add("Shadow"),e._preDrawUniformMaps.add("Global")}setCameraCullInfo(e){this.cameraCullInfo.position=e._transform.position,this.cameraCullInfo.cullingMask=e.cullingMask,this.cameraCullInfo.staticMask=e.staticMask,this.cameraCullInfo.boundFrustum=e.boundFrustum,this.cameraCullInfo.useOcclusionCulling=e.useOcclusionCulling}setBeforeForwardCmds(e){e&&e.length>0&&(this.beforeForwardCmds=e,e.forEach((e=>{e._apply(!1)})))}setBeforeSkyboxCmds(e){e&&e.length>0&&(this.beforeSkyboxCmds=e,e.forEach((e=>{e._apply(!1)})))}setBeforeTransparentCmds(e){e&&e.length>0&&(this.beforeTransparentCmds=e,e.forEach((e=>{e._apply(!1)})))}render(e,r,s){e.cameraUpdateMask++,this.opaqueList.clear(),this.transparent.clear();var n=performance.now();a.cullByCameraCullInfo(this.cameraCullInfo,r,s,this.opaqueList,this.transparent,e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_CameraMainCull]+=performance.now()-n,n=performance.now(),0!=(this.depthTextureMode&t.DepthTextureMode.Depth)&&this._renderDepthPass(e),0!=(this.depthTextureMode&t.DepthTextureMode.DepthNormals)&&this._renderDepthNormalPass(e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_CameraOtherDest]+=performance.now()-n,this._viewPort.cloneTo(R._context3DViewPortCatch),this._scissor.cloneTo(R._contextScissorPortCatch),this._mainPass(e),this.opaqueList._batch.recoverData()}_renderDepthPass(e){e.pipelineMode=this.depthPipelineMode;var a=this._viewPort,r=e.sceneData;r.addDefine(t.DepthPass.DEPTHPASS),r.setVector(t.DepthPass.DEFINE_SHADOW_BIAS,t.Vector4.ZERO),t.Viewport.TEMP.set(a.x,a.y,a.width,a.height),t.Vector4.TEMP.setValue(a.x,a.y,a.width,a.height),e.setViewPort(t.Viewport.TEMP),e.setScissor(t.Vector4.TEMP),e.setRenderTarget(this.depthTarget,t.RenderClearFlag.Depth),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this.opaqueList.renderQueue(e),t.Stat.depthCastDrawCall+=this.opaqueList.elements.length;var s=this.camera.farplane,n=this.camera.nearplane;this._zBufferParams.setValue(1-s/n,s/n,(n-s)/(n*s),1/n),e.cameraData.setVector(t.DepthPass.DEFINE_SHADOW_BIAS,t.DepthPass.SHADOW_BIAS),e.cameraData.setVector(t.DepthPass.DEPTHZBUFFERPARAMS,this._zBufferParams),r.removeDefine(t.DepthPass.DEPTHPASS)}_transparentListRender(e){this.transparent.renderQueue(e),t.Stat.transDrawCall+=this.transparent.elements.length}_opaqueListRender(e){this.opaqueList.renderQueue(e),t.Stat.opaqueDrawCall+=this.opaqueList.elements.length}_renderDepthNormalPass(e){e.pipelineMode=this.depthNormalPipelineMode;var a=this._viewPort;t.Viewport.TEMP.set(a.x,a.y,a.width,a.height),t.Vector4.TEMP.setValue(a.x,a.y,a.width,a.height),e.setViewPort(t.Viewport.TEMP),e.setScissor(t.Vector4.TEMP),e.setClearData(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,this._defaultNormalDepthColor,1,0),e.setRenderTarget(this.depthNormalTarget,t.RenderClearFlag.Color|t.RenderClearFlag.Depth),this.opaqueList.renderQueue(e),t.Stat.depthCastDrawCall+=this.opaqueList.elements.length}opaqueTexturePass(e){let t=this.blitOpaqueBuffer;t._apply(!1),e.runCMDList(t._renderCMDs)}_mainPass(e){e.pipelineMode=this.pipelineMode,this._rendercmd(this.beforeForwardCmds,e),this._recoverRenderContext3D(e),e.setClearData(this.clearFlag,this.clearColor,1,0);var a=performance.now();if(this.enableOpaque&&this._opaqueListRender(e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_OpaqueRender]+=performance.now()-a,this._rendercmd(this.beforeSkyboxCmds,e),this.skyRenderNode){let t=this.skyRenderNode.renderelements[0];e.drawRenderElementOne(t)}this.enableOpaque&&this.opaqueTexturePass(e),this._rendercmd(this.beforeTransparentCmds,e),this._recoverRenderContext3D(e),a=performance.now(),this.transparent&&this._transparentListRender(e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_TransparentRender]+=performance.now()-a}_rendercmd(e,a){if(e&&0!=e.length){var r=performance.now();e.forEach((function(e){a.runCMDList(e._renderCMDs)})),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_CameraEventCMD]+=performance.now()-r}}_recoverRenderContext3D(e){const a=R._context3DViewPortCatch,r=R._contextScissorPortCatch;e.setViewPort(a),e.setScissor(r),e.setRenderTarget(this.destTarget,t.RenderClearFlag.Nothing)}destroy(){this.cameraCullInfo=null,this.beforeForwardCmds=null,this.beforeSkyboxCmds=null,this.beforeTransparentCmds=null,this.blitOpaqueBuffer.clear(),this.blitOpaqueBuffer=null,this.opaqueList.destroy(),this.transparent.destroy()}}R._context3DViewPortCatch=new t.Viewport(0,0,0,0),R._contextScissorPortCatch=new t.Vector4(0,0,0,0);class E{set light(e){this._light=e,this._shadowResolution=this._light.shadowResolution,this._lightWorldMatrix=this._light.getWorldMatrix(this._lightWorldMatrix),this._lightPos=this._light.transform.position,this._spotAngle=this._light.spotAngle,this._spotRange=this._light.spotRange}get light(){return this._light}constructor(){this._shadowSpotMapSize=new t.Vector4,this._shadowSpotMatrices=new t.Matrix4x4,this._renderQueue=new n(!1),this._shadowSpotData=new t.ShadowSpotData,this._lightWorldMatrix=new t.Matrix4x4,this._shadowBias=new t.Vector4}update(e){var t=this._shadowSpotData;this._getSpotLightShadowData(t,this._shadowResolution,this._shadowSpotMatrices,this._shadowSpotMapSize)}render(e,r,s){let n=e.cameraData;var i=e.sceneData;e.pipelineMode="ShadowCaster",e.setRenderTarget(this.destTarget,t.RenderClearFlag.Depth);var o=this._shadowSpotData;this._getShadowBias(o.resolution,this._shadowBias),this._setupShadowCasterShaderValues(i,o,this._shadowBias);var h=performance.now();a.cullSpotShadow(o.cameraCullInfo,r,s,this._renderQueue,e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_ShadowMapCull]+=performance.now()-h,e.cameraData=o.cameraShaderValue,e.cameraUpdateMask++,t.Viewport.TEMP.set(o.offsetX,o.offsetY,o.resolution,o.resolution),t.Vector4.TEMP.setValue(o.offsetX,o.offsetY,o.resolution,o.resolution),e.setViewPort(t.Viewport.TEMP),e.setScissor(t.Vector4.TEMP),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this._renderQueue.renderQueue(e),t.Stat.shadowMapDrawCall+=this._renderQueue.elements.length,this._applyCasterPassCommandBuffer(e),this._applyRenderData(e.sceneData,e.cameraData),this._renderQueue._batch.recoverData(),e.cameraData=n,e.cameraUpdateMask++}_getSpotLightShadowData(e,a,r,s){var n=e.position=this._lightPos;e.resolution=a,s.setValue(1/a,1/a,a,a),e.offsetX=0,e.offsetY=0;var i=this._lightWorldMatrix,o=e.viewMatrix,h=e.projectionMatrix,d=e.viewProjectMatrix,l=e.cameraCullInfo.boundFrustum;i.invert(o),t.Matrix4x4.createPerspective(3.1416*this._spotAngle/180,1,.1,this._spotRange,h),t.Matrix4x4.multiply(h,o,d),l.matrix=d,d.cloneTo(r),e.cameraCullInfo.position=n}_getShadowBias(e,a){var r=Math.tan(.5*this._spotAngle*t.MathUtils3D.Deg2Rad)*this._spotRange/e,s=-this._light.shadowDepthBias*r,n=-this._light.shadowNormalBias*r;if(this._shadowMode==t.ShadowMode.SoftHigh){const e=2.5;s*=e,n*=e}a.setValue(s,n,0,0)}_setupShadowCasterShaderValues(e,a,r){e.setVector(t.ShadowCasterPass.SHADOW_BIAS,r);var s=a.cameraShaderValue;s.setMatrix4x4(t.BaseCamera.VIEWMATRIX,a.viewMatrix),s.setMatrix4x4(t.BaseCamera.PROJECTMATRIX,a.projectionMatrix),s.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix),e.setMatrix4x4(t.BaseCamera.VIEWPROJECTMATRIX,a.viewProjectMatrix)}_applyCasterPassCommandBuffer(e){this.shadowCasterCommanBuffer&&0!=this.shadowCasterCommanBuffer.length&&this.shadowCasterCommanBuffer.forEach((function(e){e._apply()}))}_applyRenderData(e,a){switch(this._light.shadowMode){case t.ShadowMode.Hard:e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW);break;case t.ShadowMode.SoftLow:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH);break;case t.ShadowMode.SoftHigh:e.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_HIGH),e.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT_SOFT_SHADOW_LOW)}e.setMatrix4x4(t.ShadowCasterPass.SHADOW_SPOTMATRICES,this._shadowSpotMatrices),e.setVector(t.ShadowCasterPass.SHADOW_SPOTMAP_SIZE,this._shadowSpotMapSize)}destroy(){this._shadowSpotData.destroy()}}class T{constructor(){this.shadowCastPass=!1,this.enableDirectLightShadow=!1,this.enableSpotLightShadowPass=!1,this.enablePostProcess=!0,this.directLightShadowPass=new M,this.spotLightShadowPass=new E,this.shadowParams=new t.Vector4,this.renderpass=new R,this.finalize=new t.CommandBuffer}setBeforeImageEffect(e){e&&e.length>0&&(this._beforeImageEffectCMDS=e,e.forEach((e=>{e._apply(!1)})))}setAfterEventCmd(e){e&&e.length>0&&(this._afterAllRenderCMDS=e,e.forEach((e=>{e._apply(!1)})))}destroy(){this._afterAllRenderCMDS=null,this._beforeImageEffectCMDS=null,this.renderpass.destroy(),this.directLightShadowPass.destroy(),this.spotLightShadowPass.destroy(),this.finalize.clear(),this.finalize=null}}const b=new t.Viewport(0,0,0,0),I=new t.Vector4;class x{constructor(){this.renderpass=new T}initRenderpass(e,a){let r=this.renderpass.renderpass,s=e._getRenderTexture(),n=0,i=e.clearFlag;i!=t.CameraClearFlags.Sky||e.scene.skyRenderer._isAvailable()||(i=t.CameraClearFlags.SolidColor);let o=s.depthStencilFormat==t.RenderTargetFormat.DEPTHSTENCIL_24_8?t.RenderClearFlag.Stencil:0;switch(i){case t.CameraClearFlags.DepthOnly:case t.CameraClearFlags.Sky:n=t.RenderClearFlag.Depth|o;break;case t.CameraClearFlags.Nothing:n=0;break;case t.CameraClearFlags.ColorOnly:n=t.RenderClearFlag.Color;break;case t.CameraClearFlags.SolidColor:default:n=t.RenderClearFlag.Color|t.RenderClearFlag.Depth|o}let h=e._linearClearColor;h=1!=s.gammaCorrection?e.clearColor:e._linearClearColor,r.camera=e._renderDataModule,r.destTarget=s._renderTarget,r.clearFlag=n,r.clearColor=h;let d=e._needInternalRenderTexture();d?b.set(0,0,s.width,s.height):e.viewport.cloneTo(b),r.setViewPort(b);let l=t.Vector4.TEMP;l.setValue(b.x,b.y,b.width,b.height),r.setScissor(l),r.enableOpaque=t.Stat.enableOpaque,r.enableTransparent=t.Stat.enableTransparent,r.enableCMD=t.Stat.enableCameraCMD,r.setBeforeSkyboxCmds(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeSkyBox]),r.setBeforeForwardCmds(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeForwardOpaque]),r.setBeforeTransparentCmds(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeTransparent]),this.renderpass.setBeforeImageEffect(e._cameraEventCommandBuffer[t.CameraEventFlags.BeforeImageEffect]),this.renderpass.setAfterEventCmd(e._cameraEventCommandBuffer[t.CameraEventFlags.AfterEveryThing]),r.setCameraCullInfo(e),i==t.CameraClearFlags.Sky?r.skyRenderNode=e.scene.skyRenderer._baseRenderNode:r.skyRenderNode=null,r.pipelineMode=t.RenderContext3D._instance.configPipeLineMode;let c=t.Scene3D._updateMark%e.scene._ShadowMapupdateFrequency==0&&t.Stat.enableShadow;if(this.renderpass.shadowCastPass=c,c){let r=this.renderpass.shadowParams;r.setValue(0,0,0,0);let s=a.sceneData,n=e.scene._mainDirectionLight,i=n&&n.shadowMode!=t.ShadowMode.None;if(this.renderpass.enableDirectLightShadow=i,i){this.renderpass.directLightShadowPass.camera=e._renderDataModule,this.renderpass.directLightShadowPass.light=n._dataModule;let a=t.ILaya3D.Scene3D._shadowCasterPass.getDirectLightShadowMap(n);this.renderpass.directLightShadowPass.destTarget=a._renderTarget,r.x=this.renderpass.directLightShadowPass.light.shadowStrength,s.setTexture(t.ShadowCasterPass.SHADOW_MAP,a)}let o=e.scene._mainSpotLight,h=o&&o.shadowMode!=t.ShadowMode.None;if(this.renderpass.enableSpotLightShadowPass=h,h){this.renderpass.spotLightShadowPass.light=o._dataModule;let e=t.ILaya3D.Scene3D._shadowCasterPass.getSpotLightShadowPassData(o);this.renderpass.spotLightShadowPass.destTarget=e._renderTarget,r.y=this.renderpass.spotLightShadowPass.light.shadowStrength,s.setTexture(t.ShadowCasterPass.SHADOW_SPOTMAP,e)}s.setVector(t.ShadowCasterPass.SHADOW_PARAMS,this.renderpass.shadowParams)}r.blitOpaqueBuffer.clear();let u=e.opaquePass;if(r.enableOpaqueTexture=u,u&&(r.opaqueTexture=e._opaqueTexture._renderTarget,r.blitOpaqueBuffer.blitScreenQuad(s,e._opaqueTexture)),t.Stat.enablePostprocess&&e.postProcess&&e.postProcess.enable&&e.postProcess.effects.length>0?(this.renderpass.enablePostProcess=t.Stat.enablePostprocess,this.renderpass.postProcess=e.postProcess._context.command,e.postProcess._render(e),this.renderpass.postProcess._apply(!1)):this.renderpass.enablePostProcess=!1,this.renderpass.finalize.clear(),!this.renderpass.enablePostProcess&&d&&e._offScreenRenderTexture){let t=e._offScreenRenderTexture;I.setValue(e.normalizedViewport.x,1-e.normalizedViewport.y,s.width/t.width,-s.height/t.height),this.renderpass.finalize.blitScreenQuad(s,e._offScreenRenderTexture,I)}if(this.renderpass.enableDirectLightShadow||this.renderpass.enableSpotLightShadowPass){let e=a.sceneData,r=t.ShadowCasterPass.ShadowUniformMap;t.Config._uniformBlock&&e.createSubUniformBuffer("Shadow","Shadow",r._idata)}}renderDepth(e){let a=e.depthTextureMode;if(e.postProcess&&e.postProcess.enable&&(a|=e.postProcess.cameraDepthTextureMode),0!=(a&t.DepthTextureMode.Depth)){e.canblitDepth&&e._internalRenderTexture.depthStencilTexture?(e.depthTexture=e._cacheDepthTexture.depthStencilTexture,t.Camera.depthPass._depthTexture=e.depthTexture,e._shaderValues.setTexture(t.DepthPass.DEPTHTEXTURE,e.depthTexture),t.Camera.depthPass._setupDepthModeShaderValue(t.DepthTextureMode.Depth,e),a&=~t.DepthTextureMode.Depth):(t.Camera.depthPass.getTarget(e,t.DepthTextureMode.Depth,e.depthTextureFormat),this.renderpass.renderpass.depthTarget=e.depthTexture._renderTarget,e._shaderValues.setTexture(t.DepthPass.DEPTHTEXTURE,e.depthTexture))}0!=(a&t.DepthTextureMode.DepthNormals)&&(t.Camera.depthPass.getTarget(e,t.DepthTextureMode.DepthNormals,e.depthTextureFormat),this.renderpass.renderpass.depthNormalTarget=e.depthNormalTexture._renderTarget,e._shaderValues.setTexture(t.DepthPass.DEPTHNORMALSTEXTURE,e.depthNormalTexture)),this.renderpass.renderpass.depthTextureMode=a}fowardRender(e,a){this.initRenderpass(a,e),this.renderDepth(a);let r=a.scene.sceneRenderableManager.renderBaselist.elements,s=a.scene.sceneRenderableManager.renderBaselist.length;this.renderFowarAddCameraPass(e,this.renderpass,r,s),t.Camera.depthPass.cleanUp()}renderFowarAddCameraPass(e,a,r,s){var n=performance.now();a.shadowCastPass&&(a.enableDirectLightShadow&&(e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),a.directLightShadowPass.update(e),a.directLightShadowPass.render(e,r,s)),a.enableSpotLightShadowPass&&(e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT),e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),a.spotLightShadowPass.update(e),a.spotLightShadowPass.render(e,r,s)),a.enableDirectLightShadow?e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW):e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW),a.enableSpotLightShadowPass?e.sceneData.addDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT):e.sceneData.removeDefine(t.Scene3DShaderDeclaration.SHADERDEFINE_SHADOW_SPOT)),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_ShadowPassMode]+=performance.now()-n,a.renderpass.render(e,r,s),a._beforeImageEffectCMDS&&this._rendercmd(a._beforeImageEffectCMDS,e),a.enablePostProcess&&(n=performance.now(),a.postProcess&&this._renderPostProcess(a.postProcess,e),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_PostProcess]+=performance.now()-n),a._afterAllRenderCMDS&&this._rendercmd(a._afterAllRenderCMDS,e),a.finalize._apply(!1),e.runCMDList(a.finalize._renderCMDs)}_rendercmd(e,a){if(e&&0!=e.length){var r=performance.now();e.forEach((function(e){a.runCMDList(e._renderCMDs)})),t.Stat.renderPassStatArray[t.RenderPassStatisticsInfo.T_Render_CameraEventCMD]+=performance.now()-r}}_renderPostProcess(e,t){t.runCMDList(e._renderCMDs)}destroy(){this.renderpass.destroy()}}class y extends t.DrawNodeCMDData{get node(){return this._node}set node(e){this._node=e}get destShaderData(){return this._destShaderData}set destShaderData(e){this._destShaderData=e}get destSubShader(){return this._destSubShader}set destSubShader(e){this._destSubShader=e}get subMeshIndex(){return this._subMeshIndex}set subMeshIndex(e){this._subMeshIndex=e}constructor(){super(),this.type=t.RenderCMDType.DrawNode}apply(e){if(this.destShaderData&&this.destSubShader)if(this.node._renderUpdatePre(e),-1==this.subMeshIndex)this.node.renderelements.forEach((t=>{let a=t.subShader,r=t.materialShaderData;t.subShader=this._destSubShader,t.materialShaderData=this._destShaderData,e.drawRenderElementOne(t),t.subShader=a,t.materialShaderData=r}));else{let t=this.node.renderelements[this.subMeshIndex],a=t.subShader,r=t.materialShaderData;t.subShader=this._destSubShader,t.materialShaderData=this._destShaderData,e.drawRenderElementOne(t),t.subShader=a,t.materialShaderData=r}}}class A extends t.BlitQuadCMDData{get dest(){return this._dest}set dest(e){this._dest=e}get viewport(){return this._viewport}set viewport(e){e.cloneTo(this._viewport)}get scissor(){return this._scissor}set scissor(e){e.cloneTo(this._scissor)}get source(){return this._source}set source(e){this._source=e,this._source&&this._sourceTexelSize.setValue(1/this._source.width,1/this._source.height,this._source.width,this._source.height)}get offsetScale(){return this._offsetScale}set offsetScale(e){e.cloneTo(this._offsetScale)}get element(){return this._element}set element(e){this._element=e}constructor(){super(),this.type=t.RenderCMDType.Blit,this._viewport=new t.Viewport,this._scissor=new t.Vector4,this._offsetScale=new t.Vector4,this._sourceTexelSize=new t.Vector4}apply(e){this.element.materialShaderData._setInternalTexture(t.Command.SCREENTEXTURE_ID,this._source),this.element.materialShaderData.setVector(t.Command.SCREENTEXTUREOFFSETSCALE_ID,this._offsetScale),this.element.materialShaderData.setVector(t.Command.MAINTEXTURE_TEXELSIZE_ID,this._sourceTexelSize),e.setViewPort(this._viewport),e.setScissor(this._scissor),e.setRenderTarget(this.dest,t.RenderClearFlag.Nothing),e.drawRenderElementOne(this.element)}}class B extends t.DrawElementCMDData{constructor(){super(),this.type=t.RenderCMDType.DrawElement}setRenderelements(e){this._elemets=e}apply(e){1==this._elemets.length?e.drawRenderElementOne(this._elemets[0]):this._elemets.forEach((t=>{e.drawRenderElementOne(t)}))}}class L extends t.SetViewportCMD{get viewport(){return this._viewport}set viewport(e){this._viewport=e}get scissor(){return this._scissor}set scissor(e){this._scissor=e}constructor(){super(),this.type=t.RenderCMDType.ChangeViewPort,this.scissor=new t.Vector4,this.viewport=new t.Viewport}apply(e){e.setViewPort(this.viewport),e.setScissor(this.scissor)}}const V=new t.Viewport,F=new t.Vector4;class O extends t.SetRenderTargetCMD{get rt(){return this._rt}set rt(e){this._rt=e}get clearFlag(){return this._clearFlag}set clearFlag(e){this._clearFlag=e}get clearColorValue(){return this._clearColorValue}set clearColorValue(e){e.cloneTo(this._clearColorValue)}get clearDepthValue(){return this._clearDepthValue}set clearDepthValue(e){this._clearDepthValue=e}get clearStencilValue(){return this._clearStencilValue}set clearStencilValue(e){this._clearStencilValue=e}constructor(){super(),this.type=t.RenderCMDType.ChangeRenderTarget,this._clearColorValue=new t.Color}apply(e){e.setRenderTarget(this.rt,t.RenderClearFlag.Nothing),e.setClearData(this.clearFlag,this.clearColorValue,this.clearDepthValue,this.clearStencilValue),this.rt&&(V.set(0,0,this.rt._textures[0].width,this.rt._textures[0].height),F.setValue(0,0,this.rt._textures[0].width,this.rt._textures[0].height),e.setViewPort(V),e.setScissor(F))}}class v extends w{constructor(){super()}drawGeometry(e){let a=this.geometry.drawParams.elements;if(!this.skinnedData)return;this.geometry.bufferState.bind();let r=e._cacheShaerVariable[t.SkinnedMeshRenderer.BONES];if(!r)for(var s=0,n=e._spriteUniformParamsMap._idata.length;s<n;s++)if(e._spriteUniformParamsMap._idata[s].dataOffset==t.SkinnedMeshRenderer.BONES){r=e._spriteUniformParamsMap._idata[s],e._cacheShaerVariable[t.SkinnedMeshRenderer.BONES]=r;break}for(var i=0,o=this.geometry.drawParams.length/2;i<o;i++){var h=this.skinnedData[i];t.WebGLEngine.instance.uploadOneUniforms(e._renderShaderInstance,r,h);var d=2*i;t.WebGLEngine.instance.getDrawContext().drawElements(this.geometry._glmode,a[d+1],this.geometry._glindexFormat,a[d])}}}class N{createInstanceBatch(){return new g}createSetRenderDataCMD(){return new t.WebGLSetRenderData}createSetShaderDefineCMD(){return new t.WebGLSetShaderDefine}createDrawNodeCMDData(){return new y}createBlitQuadCMDData(){return new A}createDrawElementCMDData(){return new B}createSetViewportCMD(){return new L}createSetRenderTargetCMD(){return new O}createSceneRenderManager(){return new t.SceneRenderManagerOBJ}createSkinRenderElement(){return new v}createRenderContext3D(){let e=new P;return t.Stat.enableRenderPassStatArray&&(e.drawRenderElementOne=e.drawRenderElementOne_StatUse,e.drawRenderElementList=e.drawRenderElementList_StatUse),e}createRenderElement3D(){return new w}createInstanceRenderElement3D(){return C.create()}createRender3DProcess(){return new x}}t.Laya.addBeforeInitCallback((()=>{t.Laya3DRender.Render3DPassFactory||(t.Laya3DRender.Render3DPassFactory=new N)})),e.ForwardAddClusterRP=class{setViewPort(e){e.cloneTo(this._viewPort)}setScissor(e){e.cloneTo(this._scissor)}constructor(){this._opaqueList=new n(!1),this._transparent=new n(!0),this.cameraCullInfo=new t.CameraCullInfo,this._zBufferParams=new t.Vector4,this._scissor=new t.Vector4,this._viewPort=new t.Viewport,this._defaultNormalDepthColor=new t.Color(.5,.5,1,0),this.clearColor=new t.Color,this.depthPipelineMode="ShadowCaster",this.depthNormalPipelineMode="DepthNormal"}setCameraCullInfo(e){this.cameraCullInfo.position=e._transform.position,this.cameraCullInfo.cullingMask=e.cullingMask,this.cameraCullInfo.staticMask=e.staticMask,this.cameraCullInfo.boundFrustum=e.boundFrustum,this.cameraCullInfo.useOcclusionCulling=e.useOcclusionCulling}setBeforeForwardCmds(e){e&&e.length>0&&(this.beforeForwardCmds=e,e.forEach((e=>e._apply(!1))))}setBeforeSkyboxCmds(e){e&&e.length>0&&(this.beforeSkyboxCmds=e,e.forEach((e=>e._apply(!1))))}setBeforeTransparentCmds(e){e&&e.length>0&&(this.beforeTransparentCmds=e,e.forEach((e=>e._apply(!1))))}render(e,r,s){e.cameraUpdateMask++,this._clearRenderList(),a.cullByCameraCullInfo(this.cameraCullInfo,r,s,this._opaqueList,this._transparent,e),0!=(this.depthTextureMode&t.DepthTextureMode.Depth)&&this._renderDepthPass(e),0!=(this.depthTextureMode&t.DepthTextureMode.DepthNormals)&&this._renderDepthNormalPass(e),this._cacheViewPortAndScissor(),this._mainPass(e),this._opaqueList._batch.recoverData()}_clearRenderList(){this._opaqueList.clear(),this._transparent.clear()}_cacheViewPortAndScissor(){this._viewPort.cloneTo(r.contextViewPortCache),this._scissor.cloneTo(r.contextScissorCache)}_renderDepthPass(e){e.pipelineMode=this.depthPipelineMode;const a=this._viewPort,r=e.sceneData;r.addDefine(t.DepthPass.DEPTHPASS),r.setVector(t.DepthPass.DEFINE_SHADOW_BIAS,t.Vector4.ZERO),t.Viewport.TEMP.set(a.x,a.y,a.width,a.height),t.Vector4.TEMP.setValue(a.x,a.y,a.width,a.height),e.setViewPort(t.Viewport.TEMP),e.setScissor(t.Vector4.TEMP),e.setRenderTarget(this.depthTarget,t.RenderClearFlag.Depth),e.setClearData(t.RenderClearFlag.Depth,t.Color.BLACK,1,0),this._opaqueList.renderQueue(e);const s=this.camera.farplane,n=this.camera.nearplane;this._zBufferParams.setValue(1-s/n,s/n,(n-s)/(n*s),1/n),e.cameraData.setVector(t.DepthPass.DEFINE_SHADOW_BIAS,t.DepthPass.SHADOW_BIAS),e.cameraData.setVector(t.DepthPass.DEPTHZBUFFERPARAMS,this._zBufferParams),r.removeDefine(t.DepthPass.DEPTHPASS)}_renderDepthNormalPass(e){e.pipelineMode=this.depthNormalPipelineMode;const a=this._viewPort;t.Viewport.TEMP.set(a.x,a.y,a.width,a.height),t.Vector4.TEMP.setValue(a.x,a.y,a.width,a.height),e.setViewPort(t.Viewport.TEMP),e.setScissor(t.Vector4.TEMP),e.setClearData(t.RenderClearFlag.Color|t.RenderClearFlag.Depth,this._defaultNormalDepthColor,1,0),e.setRenderTarget(this.depthNormalTarget,t.RenderClearFlag.Color|t.RenderClearFlag.Depth),this._opaqueList.renderQueue(e)}_mainPass(e){if(e.pipelineMode=this.pipelineMode,r.renderCmd(this.beforeForwardCmds,e),r.recoverRenderContext3D(e,this.destTarget),e.setClearData(this.clearFlag,this.clearColor,1,0),this.enableOpaque&&this._opaqueList.renderQueue(e),r.renderCmd(this.beforeSkyboxCmds,e),this.skyRenderNode){const t=this.skyRenderNode.renderelements[0];t.subShader&&e.drawRenderElementOne(t)}this.enableOpaque&&this._opaqueTexturePass(),r.renderCmd(this.beforeTransparentCmds,e),r.recoverRenderContext3D(e,this.destTarget),this._transparent.renderQueue(e)}_opaqueTexturePass(){}},e.InstanceRenderElementOBJ=class extends w{addUpdateBuffer(e,t){this._vertexBuffer3D[this.updateNums]=e,this._updateDataNum[this.updateNums++]=t}getUpdateData(e,t){let a=this._updateData[e];return(!a||a.length<t)&&(a=this._updateData[e]=new Float32Array(t)),a}constructor(){super(),this._vertexBuffer3D=[],this._updateData=[],this._updateDataNum=[]}drawGeometry(e){let a,r;for(let e=0;e<this.updateNums&&(r=this._vertexBuffer3D[e]._deviceBuffer,r);e++)a=this._updateData[e],r.orphanStorage(),r.setData(a.buffer,0,0,this.drawCount*this._updateDataNum[e]*4);t.WebGLEngine.instance.getDrawContext().drawGeometryElement(this.geometry)}clear(){this.updateNums=0}},e.RenderCullUtil=a,e.RenderListQueue=n,e.RenderPassUtil=r,e.RenderQuickSort=s,e.Web3DRenderModuleFactory=f,e.WebBaseRenderNode=i,e.WebCameraNodeData=l,e.WebDirectLight=o,e.WebGL3DRenderPassFactory=N,e.WebGLBlitQuadCMDData=A,e.WebGLDirectLightShadowRP=M,e.WebGLDrawElementCMDData=B,e.WebGLDrawNodeCMDData=y,e.WebGLForwardAddClusterRP=R,e.WebGLForwardAddRP=T,e.WebGLInstanceRenderBatch=g,e.WebGLInstanceRenderElement3D=C,e.WebGLRender3DProcess=x,e.WebGLRenderContext3D=P,e.WebGLRenderElement3D=w,e.WebGLSetRenderTargetCMD=O,e.WebGLSetViewportCMD=L,e.WebGLSkinRenderElement3D=v,e.WebGLSpotLightShadowRP=E,e.WebLightmap=h,e.WebMeshRenderNode=d,e.WebPointLight=u,e.WebReflectionProbe=_,e.WebSceneNodeData=c,e.WebSimpleSkinRenderNode=p,e.WebSkinRenderNode=S,e.WebSpotLight=D,e.WebVolumetricGI=m}(window.Laya=window.Laya||{},Laya);